/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/*----------------RESET----------------*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*----------------UTILS----------------*/
.detail__media__image, .detail, .collections__gallery__media__image, .collections__gallery, .collection__content, .collections__wrapper, .collections, .about__gallery__media__image, .about__gallery, .about__content__media__image, .about__content, .about, .preloader {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

/*----------------COLOR----------------*/
/*----------------FONT----------------*/
/*----------------INDEX----------------*/
/*----------------SHARED----------------*/
.detail__information__item__title, .detail__information__text, .collections__titles__label {
  font-size: 1.2rem;
}

.preloader__number {
  font-size: 1.4rem;
}

.detail__information__highlight__text, .collections__content__article__description, body {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.6;
}

.collections__titles {
  position: absolute;
  left: 50%;
  top: 50%;
  display: flex;
  align-items: center;
  transform: translate(-50%, -50%) rotate(-90deg);
}

.detail__information__link {
  font-family: "George x";
  font-size: 3rem;
}

.preloader__text {
  font-family: "George x";
  font-size: 5.3rem;
}

.collections__content__article__title {
  font-family: "George x";
  font-size: 6rem;
}

.about__title {
  font-family: "George x";
  font-size: 10rem;
}

.detail__information__title {
  font-family: "George x";
  font-size: 12rem;
  line-height: 0.82;
}

.collections__titles__title {
  font-family: "George x";
  font-size: 20rem;
}

/*----------------BASE----------------*/
*, *:after, *:before {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
}

body {
  font-family: "Suisse BP";
}
@media (max-width: 767px) {
  body {
    font-size: 100rem;
  }
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

img {
  vertical-align: middle;
}

@font-face {
  font-family: "Suisse BP";
  src: url(0aac4504517ff7db22b8.woff2) format("woff2"), url(0f4da43c1c5e50ea7945.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "George x";
  src: url(646f382ab8799835c1fe.woff2) format("woff2"), url(8cdffd5bd92830a175bf.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(0e09c0dd7ec6aa3c9a3c.woff2) format("woff2"), url(8ad6f6ef479e0dffb49d.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(66e7345f8223884cb886.woff2) format("woff2"), url(76a53f7a4f5a2910126b.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
/*----------------COMPONENTS----------------*/
.preloader {
  display: none;
  background-color: #C6726B;
  color: #F9F1E7;
  text-align: center;
  flex-direction: column;
}

.preloader__text {
  max-width: 66rem;
}

.preloader__number {
  position: absolute;
  bottom: 7.3rem;
}

/*----------------PARTIALS----------------*/
/*----------------PAGES----------------*/
.about__wrapper {
  background-color: #B2B8C3;
}

.about__title {
  text-align: center;
  line-height: 0.8;
  margin-left: auto;
  margin-right: auto;
  padding-top: 2rem;
  width: 20ch;
}

.about__content {
  position: relative;
  padding-top: 5rem;
}

.about__content__column {
  display: flex;
  justify-content: space-between;
  margin: 10rem 10rem 0 5rem;
}

.about__content__label {
  position: relative;
  top: 10%;
}

.about__content__description {
  width: 44rem;
}

.about__content__media {
  width: 44.7rem;
  position: relative;
  height: 63.1rem;
}

.about__content__media__image {
  object-fit: cover;
  border-top-left-radius: 50% 45%;
  border-top-right-radius: 50% 45%;
}

.about__gallery {
  position: relative;
}

.about__gallery__wrapper {
  align-items: center;
  display: flex;
}

.about__gallery__media {
  width: 44.7rem;
  position: relative;
  height: 63.1rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.collections {
  color: #F9F1E7;
  background-color: #BC978C;
}

.collections__wrapper {
  overflow: hidden;
}

.collections__titles__label {
  letter-spacing: 0.1rem;
  margin: 0 3rem;
  text-align: center;
  text-transform: uppercase;
  transform: rotate(90deg);
}

.collections__titles__title {
  padding-top: 2rem;
}

.collections__content__article {
  position: absolute;
  left: 8rem;
  bottom: 8rem;
  opacity: 0;
}
.collections__content__article--active {
  opacity: 1;
}

.collections__content__article__title {
  padding-bottom: 2rem;
}

.collections__content__article__description {
  max-width: 44rem;
}

.collections__gallery__wrapper {
  align-items: center;
  display: flex;
  top: 25%;
  left: 50%;
  position: absolute;
  transform: translate(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  width: 44.7rem;
  position: relative;
  height: 63.1rem;
}

.collections__gallery__media__image {
  object-fit: cover;
}

.detail {
  background-color: #BC978C;
  color: #F9F1E7;
}

.detail__wrapper {
  display: flex;
  align-items: center;
}

.detail__media {
  position: relative;
  height: 78.2rem;
  width: 55.4rem;
}

.detail__information {
  padding-left: 8.2rem;
}

.detail__information__text {
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail__information__title {
  max-width: 60rem;
}

.detail__information__content {
  padding-left: 18rem;
}

.detail__information__link {
  display: inline-block;
  margin-top: 3rem;
}

.detail__information__highlights {
  margin-top: 6rem;
}

.detail__information__highlight {
  display: flex;
  align-items: center;
}
.detail__information__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__highlight__icon {
  border: 1px solid currentColor;
  border-radius: 50%;
  margin-right: 3.75rem;
  height: 4rem;
  width: 4rem;
}

.detail__information__highlight__text {
  letter-spacing: 0.3rem;
}

.detail__information__list {
  margin-top: 5rem;
}

.detail__information__item {
  display: flex;
  align-items: center;
}
.detail__information__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__item__title {
  width: 10rem;
  padding-right: 2.5rem;
}

.detail__information__item__text {
  width: 44rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/